from typing import Protocol, List, Optional, Dict, Any
from .section import ISection


class ISearchQuery(Protocol):
    """Interface for parsed search queries"""

    def has_wildcards(self) -> bool: ...
    def get_tags(self) -> List[str]: ...
    def get_paths(self) -> List[str]: ...
    def get_id(self) -> Optional[str]: ...
    def get_parameters(self) -> dict: ...
    def get_operators(self) -> List[str]: ...


class ISearchAlgorithm(Protocol):
    """Interface for search algorithms"""

    def supports_wildcards(self) -> bool: ...
    def matches_metadata(
        self, metadata: Dict[str, Any], query: ISearchQuery
    ) -> bool: ...
    def matches_section(self, section: ISection, query: ISearchQuery) -> bool: ...
